#!/bin/bash

# Params list
# 1 - Host name
# 2 - SSH Port
# 3 - Timezone
# 4 - Disable ping (for yes "true")
# 5 - Redirect URL
# 6 - Clients IP whitelist (separate by ",")

# Detecting init mode
if [ -n "$1" ]; then
  param_host_name=$1
  param_ssh_port=$2
  param_time_zone=$3
  param_ping_disable=$4
  param_redirect_url=$5
  param_whitelist_ips=$6
else
  echo "Enter parameters or leave blank for no changes (6 steps)"
  read -rp "1. Hostname: " param_host_name
  read -rp "2. SSH port: " param_ssh_port
  read -rp "3. Timezone: " param_time_zone
  read -rp "4. Disable ping?: " param_ping_disable
  read -rp "5. URL for redirection: " param_redirect_url
  read -rp "6. Clients IP whitelist: " param_whitelist_ips
fi

# Set params
if [ -z "${param_ssh_port}" ]; then param_ssh_port="22"; fi
if [ -z "${param_ping_disable}" ]; then param_ping_disable="false"; else param_ping_disable="true"; fi
if [ -z "${param_whitelist_ips}" ]; then param_whitelist_ips=$(echo "${SSH_CLIENT}" | awk '{ print $1}'); fi
param_host_ip=$(ip addr show | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}' | cut -d/ -f1)

# Print params
cGreen="\e[1;32m"
cYellow="\e[1;33m"
cEnd="\e[0m"

echo "=================================================="
echo -e "${cGreen}Host name:    ${cYellow} ${param_host_name}${cEnd}"
echo -e "${cGreen}SSH port:     ${cYellow} ${param_ssh_port}${cEnd}"
echo -e "${cGreen}Timezone:     ${cYellow} ${param_time_zone}${cEnd}"
echo -e "${cGreen}Disable ping: ${cYellow} ${param_ping_disable}${cEnd}"
echo -e "${cGreen}Redirect URL: ${cYellow} ${param_redirect_url}${cEnd}"
echo -e "${cGreen}Whitelist IP: ${cYellow} ${param_whitelist_ips}${cEnd}"
echo -e "${cGreen}Host IP:      ${cYellow} ${param_host_ip}${cEnd}"
echo "=================================================="

if [ -z "$1" ]; then
  while true; do
    read -rp "It is all OK? Can we proceed? [y|n]: " yn
    case $yn in
    [Yy]*) break ;;
    [Nn]*) exit ;;
    *) echo "It is all OK? Can we proceed? [y|n]: " ;;
    esac
  done
fi

# Update & upgrade
apt -y update
apt -y upgrade
apt -y dist-upgrade

# Install dependencies
apt -y install curl htop mc sed wget
apt -y install fail2ban ufw knockd

# Set hostname
if [ -n "${param_host_name}" ]; then
  echo "${param_host_name}" >/etc/hostname
  echo "127.0.0.1 localhost" >/etc/hosts
  echo "${param_host_ip} ${param_host_name}" >>/etc/hosts
fi

# Clean MOTD
echo "" >/etc/motd

# Set timezone
if [ -n "${param_time_zone}" ]; then
  timedatectl set-timezone "${param_time_zone}"
fi

# Set new SSH port
sed -i "s/#Port 22/Port ${param_ssh_port}/g" /etc/ssh/sshd_config

# Disable PING response and IPV6 protocol
if [[ "$param_ping_disable" == "true" ]]; then
  echo "1" >/proc/sys/net/ipv4/icmp_echo_ignore_all
  echo "net.ipv4.icmp_echo_ignore_all = 1" >>/etc/sysctl.conf
  echo "net.ipv6.conf.all.disable_ipv6 = 1" >>/etc/sysctl.conf
  sysctl -p
fi

# Configure fail2ban
cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/fail2ban/jail.local" >>/etc/fail2ban/jail.local
wget -O "/etc/fail2ban/action.d/ssh-ufw.conf" "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/fail2ban/ssh-ufw.conf"
sed -i 's/enabled = true/enabled = false/g' /etc/fail2ban/jail.d/defaults-debian.conf
systemctl restart fail2ban

# Configure firewall
sed -i 's/IPV6=yes/IPV6=no/g' /etc/default/ufw
sed -i '/ufw-before-input.*icmp/s/ACCEPT/DROP/g' /etc/ufw/before.rules
ufw default deny incoming
ufw default allow outgoing
ufw allow "${param_ssh_port}"/tcp
for ip in ${param_whitelist_ips//,/ }; do
  ufw allow from "${ip}" to any
done
echo "y" | ufw enable

# Set redirect
if [ -n "${param_redirect_url}" ]; then
  apt -y install nginx
  curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/nginx/default" >/etc/nginx/sites-available/default
  sed -i "s/REDIRECT_URL/http:\/\/${param_redirect_url}/g" "/etc/nginx/sites-available/default"
  service nginx restart
  ufw allow 80/tcp
fi

# Configure knockd
wget -O /etc/knockd.conf 'https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/knockd/knockd.conf'
sed -i 's/ProtectSystem=full/ProtectSystem=true/g' /usr/lib/systemd/system/knockd.service
curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/knockd/knockd.service" >/usr/lib/systemd/system/knockd.service
sed -i 's/START_KNOCKD=0/START_KNOCKD=1/g' /etc/default/knockd
systemctl enable systemd-networkd-wait-online.service
systemctl daemon-reload
systemctl enable knockd
service knockd start
