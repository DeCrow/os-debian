#!/bin/bash

# Params list (use "-p" or "--params")
# 1 - Set server hostname
# 2 - Set server SSH Port
# 3 - Set server timezone
# 4 - Disable IPv6? (for yes "true")
# 5 - Allow ping only that length
# 6 - Redirect URL from 80 port
# 7 - Clients IP whitelist (separate by ",")

# Get init mode param
param_mode=$1

# Set user params
if [[ "$param_mode" == "-p" ]] || [[ "$param_mode" == "--params" ]]; then
  param_host_name=$2
  param_ssh_port=$3
  param_time_zone=$4
  param_ping_length=$5
  param_ipv6_disable=$6
  param_redirect_url=$7
  param_whitelist_ips=$8
else
  echo "   Enter parameters or leave blank for no changes (7 steps)"
  read -rp "1. Hostname: " param_host_name
  read -rp "2. SSH port: " param_ssh_port
  read -rp "3. Timezone: " param_time_zone
  read -rp "4. Disable IPv6?: " param_ipv6_disable
  read -rp "5. Allow ping length: " param_ping_length
  read -rp "6. URL for redirection: " param_redirect_url
  read -rp "7. Clients IP whitelist: " param_whitelist_ips
fi

# Modify params
if [ -z "${param_ipv6_disable}" ]; then param_ipv6_disable="false"; else param_ipv6_disable="true"; fi
if [ -z "${param_whitelist_ips}" ]; then param_whitelist_ips=$(echo "${SSH_CLIENT}" | awk '{ print $1}'); fi
param_host_ip=$(ip addr show | grep 'inet ' | grep -v 127.0.0.1 | awk '{print $2}' | cut -d/ -f1)

# Print params
cGreen="\e[1;32m"
cYellow="\e[1;33m"
cRed="\e[1;91m"
cEnd="\e[0m"

if [ -z "${param_host_name}" ]; then print_host_name="${cRed}no change${cEnd}"; else print_host_name="${cYellow}${param_host_name}${cEnd}"; fi
if [ -z "${param_ssh_port}" ]; then print_ssh_port="${cRed}no change${cEnd}"; else print_ssh_port="${cYellow}${param_ssh_port}${cEnd}"; fi
if [ -z "${param_time_zone}" ]; then print_time_zone="${cRed}no change${cEnd}"; else print_time_zone="${cYellow}${param_time_zone}${cEnd}"; fi
if [[ "$param_ipv6_disable" == "false" ]]; then print_ipv6_disable="${cRed}no change${cEnd}"; else print_ipv6_disable="${cYellow}${param_ipv6_disable}${cEnd}"; fi
if [ -z "${param_ping_length}" ]; then print_ping_length="${cRed}no change${cEnd}"; else print_ping_length="${cYellow}${param_ping_length}${cEnd}"; fi
if [ -z "${param_redirect_url}" ]; then print_redirect_url="${cRed}no change${cEnd}"; else print_redirect_url="${cYellow}${param_redirect_url}${cEnd}"; fi

echo "=================================================="
echo -e "${cGreen}1. Host name:    ${print_host_name}"
echo -e "${cGreen}2. SSH port:     ${print_ssh_port}"
echo -e "${cGreen}3. Timezone:     ${print_time_zone}"
echo -e "${cGreen}4. Disable IPv6: ${print_ipv6_disable}"
echo -e "${cGreen}5. Ping length:  ${print_ping_length}"
echo -e "${cGreen}6. Redirect URL: ${print_redirect_url}"
echo -e "${cGreen}7. Whitelist IP: ${cYellow}${param_whitelist_ips}${cEnd}"
echo -e "${cGreen}8. Host IP:      ${cYellow}${param_host_ip}${cEnd}"
echo "=================================================="

if ! [[ "$param_mode" == "-p" ]] && ! [[ "$param_mode" == "--params" ]]; then
  while true; do
    read -rp "It is all OK? Can we proceed? [y|n]: " yn
    case $yn in
    [Yy]*) break ;;
    [Nn]*) exit ;;
    *) echo "It is all OK? Can we proceed? [y|n]: " ;;
    esac
  done
fi

# Update & upgrade
apt -y update
apt -y upgrade
apt -y dist-upgrade

# Install dependencies
apt -y install curl htop mc sed wget
apt -y install fail2ban ufw knockd

# Set hostname
if [ -n "${param_host_name}" ]; then
  echo "${param_host_name}" >/etc/hostname
  echo "127.0.0.1 localhost" >/etc/hosts
  echo "${param_host_ip} ${param_host_name}" >>/etc/hosts
fi

# Clean MOTD
echo "" >/etc/motd

# Set timezone
if [ -n "${param_time_zone}" ]; then
  timedatectl set-timezone "${param_time_zone}"
fi

# Set new SSH port
if [ -n "${param_ssh_port}" ]; then
  sed -i "s/#Port/Port/g" /etc/ssh/sshd_config
  sed -i "s/Port [0-9]*/Port ${param_ssh_port}/g" /etc/ssh/sshd_config
fi

# Configure fail2ban
cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/fail2ban/jail.local" >>/etc/fail2ban/jail.local
wget -O "/etc/fail2ban/action.d/ssh-ufw.conf" "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/fail2ban/ssh-ufw.conf"
sed -i 's/enabled = true/enabled = false/g' /etc/fail2ban/jail.d/defaults-debian.conf
systemctl restart fail2ban

# Disable IPV6 protocol
if [[ "$param_ipv6_disable" == "true" ]]; then
  sed -i 's/IPV6=yes/IPV6=no/g' /etc/default/ufw
  echo "net.ipv6.conf.all.disable_ipv6 = 1" >>/etc/sysctl.conf
  sysctl -p
fi

# Configure firewall
ufw default deny incoming
ufw default allow outgoing
ufw allow "${param_ssh_port}"/tcp
for ip in ${param_whitelist_ips//,/ }; do
  ufw allow from "${ip}" to any
done

# Allow ping length
if [ -n "${param_ping_length}" ]; then
  length=$((param_ping_length+28))
  sed -i '/ufw-before-input.*icmp/s/ACCEPT/DROP/g' /etc/ufw/before.rules
  sed -i "/^\# End required lines/a \\\n# allow ping length\n-I INPUT -p icmp -j DROP\n-I INPUT -p icmp -m length --length ${length} -j ACCEPT\n" /etc/ufw/before.rules
fi

echo "y" | ufw enable

# Set redirect
if [ -n "${param_redirect_url}" ]; then
  apt -y install nginx
  curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/nginx/default" >/etc/nginx/sites-available/default
  sed -i "s/REDIRECT_URL/http:\/\/${param_redirect_url}/g" "/etc/nginx/sites-available/default"
  service nginx restart
  ufw allow 80/tcp
fi

# Configure knockd
wget -O /etc/knockd.conf 'https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/knockd/knockd.conf'
sed -i 's/ProtectSystem=full/ProtectSystem=true/g' /usr/lib/systemd/system/knockd.service
curl "https://raw.githubusercontent.com/DeCrow/setMyDebian/main/content/knockd/knockd.service" >/usr/lib/systemd/system/knockd.service
sed -i 's/START_KNOCKD=0/START_KNOCKD=1/g' /etc/default/knockd
systemctl enable systemd-networkd-wait-online.service
systemctl daemon-reload
systemctl enable knockd
service knockd start
